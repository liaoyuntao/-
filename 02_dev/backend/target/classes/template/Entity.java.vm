package ${package}.${moduleName}.entity;
import com.szt.common.CommonConstant;
import com.baomidou.mybatisplus.annotations.TableId;
import com.baomidou.mybatisplus.annotations.TableName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.hibernate.validator.constraints.NotBlank;
import com.fasterxml.jackson.annotation.JsonFormat;
import org.springframework.format.annotation.DateTimeFormat;
import org.apache.shiro.SecurityUtils;
import com.szt.modules.sys.entity.SysUserEntity;
import com.szt.modules.sys.entity.SysCommcomFieldEntity;
import javax.validation.constraints.NotNull;
import org.springframework.stereotype.Controller;
	#if(${hasBigDecimal})
    import java.math.BigDecimal;
	#end
import java.io.Serializable;
import java.util.Date;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@TableName("${tableName}")
public class ${className}Entity implements Serializable {
    private static final long serialVersionUID = 1L;

	#foreach ($column in $columns)
        /**
         * $column.comment
         */
		#if($column.fieldName== $pk.fieldName)
        @TableId
		#end
		#if($column.nullable==false && $column.fieldName!= $pk.fieldName)
			#if( $column.attrType == "String")
            @NotBlank(message="${column.pageComment}不能为空")
			#else
            @NotNull(message="${column.pageComment}不能为空")
			#end
		#end
        @ApiModelProperty(value = "${column.comment}",required = ${column.nullable})
		#if($column.attrType == "Date")
        @DateTimeFormat(pattern="yyyy-MM-dd HH:mm:ss")
        @JsonFormat(pattern="yyyy-MM-dd",timezone = "GMT+8")
		#end
    private $column.attrType $column.attrname;
	#end

	#foreach ($column in $columns)
        /**
         * 设置：${column.comment}
         */
        public void set${column.attrName}($column.attrType $column.attrname) {
            this.$column.attrname = $column.attrname;
        }
        /**
         * 获取：${column.comment}
         */
        public $column.attrType get${column.attrName}() {
            return $column.attrname;
        }
	#end

    public void insert(){
        this.createTime = new Date();
        this.updateTime = new Date();
        this.sort = this.sort == null ? 0 : this.sort;
        if(this.deleteFlag == null || this.deleteFlag.length()==0){
            this.deleteFlag = "0";
        }
        this.versionNo=1;
    }
    public void update(){
        this.updateTime = new Date();
    }
}
